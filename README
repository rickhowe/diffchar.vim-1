This is a mirror of http://www.vim.org/scripts/script.php?script_id=4932

This plugin has been developed in order to make diff mode more useful. DiffText does not show the exact difference, but this plugin will highlight its difference, character by character - so called DiffChar.

Use this plugin just after diff command. DiffText area will be narrowed down to show the DiffChar. You can use this plugin in non-diff usual mode as well.

For example, diff command shows: (<|DiffText area|>)

     (file A) The <|swift brown fox jumped over the lazy|> dog.
     (file B) The <|lazy fox jumped over the swift brown|> dog.

then this plugin will narrow down the DiffText area:

     (file A) The <|swift brown|> fox jumped over the <|lazy|> dog.
     (file B) The <|lazy|> fox jumped over the <|swift brown|> dog.

This plugin has been using "An O(NP) Sequence Comparison Algorithm" developed by S.Wu, et al., which always finds an optimum sequence quickly. But for longer lines and less-similar files, it takes time to complete the diff tracing. At update 5.2, this plugin splits the tracing with the diff command. Firstly applies the internal O(NP) algorithm. If not completed within the time specified by a g:DiffSplitTime global (and tabpage) variable, continuously switches to the diff command at that point, and then joins both results. This approach provides a stable performance and reasonable accuracy, because the diff command effectively optimizes between them. The default of its variable is 500 ms, which would be useful for smaller files. If prefer to always apply the internal algorithm for accuracy (or the diff command for performance) only, set some large value (or 0) to the variable.

Since update 4.7, this plugin has set the DiffCharExpr() to the diffexpr option, if it is empty. This function would be useful for smaller files. If the total number of lines on both diff windows <= 200, by default, it applies this plugin's internal algorithm to make the diff faster. And, by default, it initially shows the exact differences for all lines whenever diff mode begins. You can change these arguments of this function like "set diffexpr=DiffCharExpr(100, 0)", but if prefer not to use this enhancement, set 0 to g:DiffExpr.

This plugin has been always positively supporting mulltibyte characters.

Commands
:[range]SDChar - Highlight difference units for [range]
:[range]RDChar - Reset the highlight of difference units for [range]

Configurable Keymaps
<Plug>ToggleDiffCharAllLines (default: <F7>)
    toggle the highlight/reset of difference units for all lines
<Plug>ToggleDiffCharCurrentLine (default: <F8>)
    toggle the highlight/reset of difference units for current line
<Plug>JumpDiffCharPrevStart (default: [b)
    jump cursor to the start position of the previous difference unit
<Plug>JumpDiffCharNextStart (default: ]b)
    jump cursor to the start position of the next difference unit
<Plug>JumpDiffCharPrevEnd (default: [e)
    jump cursor to the end position of the previous difference unit
<Plug>JumpDiffCharNextEnd (default: ]e)
    jump cursor to the end position of the next difference unit

Global Variables (and Tabpage variables when using t:)
g:DiffUnit - type of difference unit
    "Char"   : any single character (default)
    "Word1"  : \w\+ word and any \W single character
    "Word2"  : non-space and space words
    "Word3"  : \< or \> character class boundaries
    "CSV(,)" : separated by characters such as ',', ';', and '\t'
g:DiffColors - matching colors for changed unit pairs
    0   : always DiffText (default)
    1   : 4 colors in fixed order
    2   : 8 colors in fixed order
    3   : 16 colors in fixed order
    100 : all available colors in dynamic random order
        (notes : always DiffAdd for added units)
g:DiffUpdate - interactively updating of highlightings while editing
    0 : disable (default)
    1 : enable
      (notes : available on vim 7.4)
g:DiffSplitTime - a time length (ms) to apply the internal algorithm first
    0 ~ : (500 as default)

DiffCharExpr(mxi, exd) function for the diffexpr option
    mxi: the maximum number of total lines of both windows to apply internal algorithm, apply diff command when more lines
    exd: 1 = initially show exact differences, 0 = vim original ones

Update : 5.3
* Performance improved for long lines and some defects fixed when the diff command is used for the diff tracing.

Update : 5.2
* Enhanced to provide a stable performance even for less-similar long files. The new approach applies this plugin's algorithm first, and if not completed within the specified time, continuously splits the tracing with the diff command, and join both results.
* Fixed: when diff command does not choose minimal algorithm and it shows the equivalent lines as "changed", this plugin sometimes makes an error.
* Fixed: if file encoding is not same as buffer encoding, a difference may not be correctly detected in DiffCharExpr().

Update : 5.1
* Since vim 7.4.682, it has become impossible to overwrite the vim's diff highlights with this plugin. Then, for example, DiffText bold typeface will be left in all the diff highlighted lines (for more info, see https://groups.google.com/forum/?hl=en_US#!topic/vim_use/1jQnbTva2fY). This update provides a workaround to reduce its effect and to show the differences mostly same as before.

Update : 5.0
* Significantly improved the way to trace and show the differences and make them 1.5 ~ 2.0 times faster.
* Introduced g:DiffMaxRatio (and t:DiffMaxRatio), a maximum difference ratio to trace (100% as default). Once exceeds, the diff tracing is recursively split and helps to keep performance instead of diff accuracy.
* Discontinued other difference algorithms (OND and Basic) than the ONP, then g:DiffAlgorithm no longer supported.
* Improved to allow to specify one or more characters for "CSV(c)" in g:DiffUnit (and t:DiffUnit). For example, "CSV(,:\t)" will split the units by a comma, colon, and tab. Use '\&#039 for a backslash.

Update : 4.9
* Fixed DiffCharExpr() to check the number of total lines, not different lines only, of both windows and apply either internal algorithm or external diff command, in order to keep the appropriate performance for large files.

Update : 4.81
* Enhanced to make DiffCharExpr() a bit faster by using uniq() or so.

Update : 4.8
* Enhanced to set the threshold value on DiffCharExpr() to check how many differences and then apply either of internal algorithm or external diff command. The default for diffexpr option using DiffCharExpr() is changed to use this threshold, 200 - apply internal if less than 200 differences, apply external if more.
* Changed the way to select windows when more than 2 windows in the page.
  - automatically select the diff mode's next (wincmd w) window, if any, in addition to the current window
  - can select any of splitted windows as vim can do for diff

Update : 4.7
* Enhanced to set DiffCharExpr() to the diffexpr option, if it is empty. When diff mode begins, vim calls this function which finds differences by this plugin's internal diff algorithm (default) and then initially shows the exact differences (default). You can also explicitly set this function to the option with different arguments.
* Enhanced to make the key mappings configurable. For example, the default <F7> can be modified by:
       nmap <silent> "your favorite key" <Plug>ToggleDiffCharAllLines
* Fixed to correctly adjust the position of difference units when diffopt's iwhite option is enabled.
